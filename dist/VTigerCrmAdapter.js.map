{"version":3,"sources":["../src/VTigerCrmAdapter.js"],"names":[],"mappings":"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","file":"VTigerCrmAdapter.js","sourcesContent":["/**\r\n * Created by OliverJaegle on 08.06.2016.\r\n */\r\nconst VTigerCrm = require('./vtiger_consumer_swagger/src/'); // See note below*.\r\nconst CryptoJS = require('crypto-js');\r\n\r\nconst ELEMENT_TYPE_CONTACT = 'Contacts';\r\n\r\nexport class VTigerCrmAdapterException extends Error{\r\n    constructor(operation, message, previous){\r\n        super(message);\r\n        this.operation = operation;\r\n        this.previous = previous;\r\n    }\r\n}\r\n\r\nexport class VTigerCrmAdapter {\r\n\r\n// ------------------------------------------------ public methods ----------------------------------------------------\r\n    constructor(basePath, username, accesskey) {\r\n\r\n        this.username = username;\r\n        this.accesskey = accesskey;\r\n        this.sessionToken = '';\r\n        this.assigned_user_id = \"19x5\";\r\n\r\n        this.vTigerApi = new VTigerCrm.DefaultApi(); // Allocate the API class we're going to use.\r\n        this.vTigerApi.apiClient.basePath = basePath;\r\n\r\n        /*          We can't login in the constructor as a consumer might immediately issue a subsequent request.\r\n         Thus, all the resolvers of the login-Promise need to buffer the result in order to take advantage of existing\r\n         session tokens\r\n\r\n         this._loginPromise(this.username, this.accessKey)\r\n         .then((result)=>{\r\n         this.sessionToken = result\r\n         })\r\n         .catch((err)=>{\r\n         console.error(err.operation, err.message, err.previous.toString());\r\n         throw err;\r\n         });*/\r\n    }\r\n\r\n    findContactsFulltextPromise(text){\r\n        const contactSkeleton = {\r\n            lastname: text,\r\n            firstname: text,\r\n            email: text\r\n        };\r\n\r\n        return this.findContactsBySkeletonPromise(contactSkeleton, 'OR');\r\n    } //findContactsFulltextPromise\r\n\r\n    createContactPromise(contact){\r\n        const adapterInstance = this;\r\n        contact.assigned_user_id = this.assigned_user_id;\r\n        return adapterInstance._loginPromise().then((sessionToken)=>adapterInstance._createPromise(sessionToken, ELEMENT_TYPE_CONTACT, contact));\r\n    }\r\n\r\n    retrievePromise(contactId){\r\n        const adapterInstance = this;\r\n        return adapterInstance._loginPromise().then((sessionToken)=>adapterInstance._retrievePromise(sessionToken, contactId));\r\n    }\r\n\r\n    updatePromise(contact){\r\n        const adapterInstance = this;\r\n        return adapterInstance._loginPromise().then((sessionToken)=>adapterInstance._updatePromise(sessionToken, contact));\r\n    }\r\n\r\n    deletePromise(contactId){\r\n        const adapterInstance = this;\r\n        return adapterInstance._loginPromise().then((sessionToken)=>adapterInstance._deletePromise(sessionToken, contactId));\r\n    }\r\n\r\n//-------------------------------------------------- private methods ---------------------------------------------------\r\n    /**\r\n     * All services offered by vTiger require authorization to be done prior to the webservice-call.\r\n     * As everything is done asynchronously, the login-promise needs to be resolved before continuing resolving the\r\n     * actual webservice-promise. Thus, the autorization-rensitive-methods (starting with _) are encapsulated again in a\r\n     * public method which chains the execution.\r\n     * Still, the login-method bufferss the result on resolution so that - although the promise is chained as pre-\r\n     * decessor, the webservices used for authorization are not executed anymore.\r\n     * It seems as if the sessionToken had an unlimited lifetime.\r\n     * @returns {Promise}\r\n     * @private\r\n     */\r\n    _loginPromise() {\r\n        const adapterInstance = this;\r\n        return new Promise((resolve, reject)=>{\r\n            if (adapterInstance.sessionToken){ resolve(adapterInstance.sessionToken) } else {\r\n                adapterInstance.vTigerApi.operationgetchallengeGet(adapterInstance.username, (err, data, response)=> {\r\n                    if (err) {\r\n                        return reject( new VTigerCrmAdapterException( 'GET_CHALLENGE', 'Couldn\\'t execute webservice:', err ));\r\n                    }\r\n                    if (!response.body.success) {\r\n                        return reject( new VTigerCrmAdapterException( 'GET_CHALLENGE', 'Couldn\\'t receive challenge:', response.body.error.message ));\r\n                    }\r\n\r\n                    const challengeToken = response.body.result.token;\r\n                    console.log('CHALLENGE_TOKEN', challengeToken);\r\n\r\n                    adapterInstance.vTigerApi.operationloginPost(adapterInstance.username, CryptoJS.MD5(challengeToken + adapterInstance.accesskey).toString(), (err, data, response)=> {\r\n                        if (err) {\r\n                            return reject( new VTigerCrmAdapterException( 'LOGIN', 'Couldn\\'t execute webservice:', err ));\r\n                        }\r\n\r\n                        if (!response.body.success) {\r\n                            return reject( new VTigerCrmAdapterException( 'LOGIN', 'Couldn\\'t log in:', response.body.error.message));\r\n                        }\r\n\r\n                        console.log('SESSION_TOKEN', response.body.result.sessionName);\r\n                        adapterInstance.sessionToken = response.body.result.sessionName;\r\n                        resolve(response.body.result.sessionName);\r\n\r\n                    }); //operationLoginPost\r\n                }); //operationChallengeGet\r\n            }})\r\n    }//_loginPromise\r\n\r\n    _queryPromise(sessionToken, queryString){\r\n        /**\r\n         * Promises a query result.\r\n         * @type {VTigerCrmAdapter}\r\n         */\r\n\r\n        const  adapterInstance = this;\r\n\r\n        return new Promise((resolve, reject)=>{\r\n            if (!sessionToken) reject(new VTigerCrmAdapterException('QUERY', 'No session token for query'));\r\n            adapterInstance.vTigerApi.operationqueryGet( sessionToken, queryString, (err, data, response)=>{\r\n                if (err) {\r\n                    return reject( new VTigerCrmAdapterException( 'QUERY', 'Couldn\\'t execute webservice:', err ));\r\n                }\r\n\r\n                if (!response.body.success) {\r\n                    return reject( new VTigerCrmAdapterException( 'QUERY', 'Couldn\\'t execute query:', response.body.error.message));\r\n                }\r\n\r\n                resolve(response.body.result); //might be initial\r\n            })\r\n        })\r\n    }\r\n\r\n    _createPromise(sessionToken, objectType, object) {\r\n        const adapterInstance = this;\r\n        return new Promise((resolve, reject)=>{\r\n            if (!sessionToken) return reject(new VTigerCrmAdapterException('CREATE', 'No session token for creation'));\r\n            adapterInstance.vTigerApi.operationcreatePost( sessionToken, objectType, JSON.stringify(object), (err, data, response)=>{\r\n                if (err) {\r\n                    return reject( new VTigerCrmAdapterException( 'CREATE', 'Couldn\\'t execute webservice:', err ));\r\n                }\r\n\r\n                if (!response.body.success) {\r\n                    return reject( new VTigerCrmAdapterException( 'CREATE', 'Couldn\\'t create:', response.body.error.message));\r\n                }\r\n\r\n                resolve(response.body.result); //might be initial\r\n            })\r\n        })\r\n    } //_createPromise\r\n    \r\n    _retrievePromise(sessionToken, id){\r\n        const adapterInstance = this;\r\n        return new Promise((resolve, reject)=>{\r\n            if (!sessionToken) return reject(new VTigerCrmAdapterException('RETRIEVE', 'No session token for retrieval'));\r\n            adapterInstance.vTigerApi.operationretrieveGet( sessionToken, id, (err, data, response)=>{\r\n                if (err) {\r\n                    return reject( new VTigerCrmAdapterException( 'RETRIEVE', 'Couldn\\'t execute webservice:', err ));\r\n                }\r\n\r\n                if (!response.body.success) {\r\n                    return reject( new VTigerCrmAdapterException( 'RETRIEVE', 'Couldn\\'t retrieve:', response.body.error.message));\r\n                }\r\n\r\n                resolve(response.body.result); //might be initial\r\n            })\r\n        })\r\n    } //_retrievePromise\r\n\r\n    _updatePromise(sessionToken, object) {\r\n        const adapterInstance = this;\r\n        return new Promise((resolve, reject)=>{\r\n            if (!sessionToken) return reject(new VTigerCrmAdapterException('UPDATE', 'No session token for update'));\r\n            adapterInstance.vTigerApi.operationupdatePost( sessionToken, JSON.stringify(object), (err, data, response)=>{\r\n                if (err) {\r\n                    return reject( new VTigerCrmAdapterException( 'UPDATE', 'Couldn\\'t execute webservice:', err ));\r\n                }\r\n\r\n                if (!response.body.success) {\r\n                    return reject( new VTigerCrmAdapterException( 'UPDATE', 'Couldn\\'t update:', response.body.error.message));\r\n                }\r\n\r\n                resolve(response.body.result); //might be initial\r\n            })\r\n        })\r\n    } //_updatePromise\r\n\r\n    _deletePromise(sessionToken, id) {\r\n        const adapterInstance = this;\r\n        return new Promise((resolve, reject)=>{\r\n            if (!sessionToken) return reject(new VTigerCrmAdapterException('DELETE', 'No session token for delete'));\r\n            adapterInstance.vTigerApi.operationdeletePost( sessionToken, id, (err, data, response)=>{\r\n                if (err) {\r\n                    return reject( new VTigerCrmAdapterException( 'DELETE', 'Couldn\\'t execute webservice:', err ));\r\n                }\r\n\r\n                if (!response.body.success) {\r\n                    return reject( new VTigerCrmAdapterException( 'DELETE', 'Couldn\\'t delete:', response.body.error.message));\r\n                }\r\n\r\n                resolve(response.body.success); //might be initial\r\n            })\r\n        })\r\n    } //_deletePromise\r\n\r\n\r\n    findContactsBySkeletonPromise(contactSkeleton, operator='AND'){\r\n        /**\r\n         * Operator defines how the properties of the contact skeleton are to be combined.\r\n         * Possible values ['AND', 'OR']\r\n         */\r\n        const adapterInstance = this;\r\n        const queryString = \"select * from Contacts where \" + VTigerCrmAdapter.contactSkeletonToWhere(contactSkeleton, operator) + \";\";\r\n\r\n        return adapterInstance._loginPromise().then((sessionToken)=>adapterInstance._queryPromise(sessionToken, queryString));\r\n    } //findContactsBySkeletonPromise\r\n\r\n// ------------------------------------------------- static helpers ----------------------------------------------------\r\n    static contactSkeletonToWhere(contact, operator){\r\n        let whereClause = '';\r\n        for(let key in contact){\r\n            if (contact.hasOwnProperty(key)){\r\n                if (whereClause) whereClause += ' ' + operator + ' ';\r\n                whereClause += key + \" LIKE '\" + contact[key] + \"'\";\r\n            }\r\n        }\r\n        return whereClause;\r\n    }\r\n}\r\n"]}