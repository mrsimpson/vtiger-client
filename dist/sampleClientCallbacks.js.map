{"version":3,"sources":["../src/sampleClientCallbacks.js"],"names":[],"mappings":"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","file":"sampleClientCallbacks.js","sourcesContent":["const USER_ACCESS_KEY = 'JkDMwItdgLaQGQdI';\r\nconst USERNAME = 'reisebuddy';\r\nconst REISEBUDDY_USER_ID = '19x5';\r\nconst ELEMENT_TYPE_CONTACT = 'Contacts';\r\n\r\nvar VTigerCrm = require('./vtiger_consumer_swagger/src/index'); // See note below*.\r\nvar vTigerAdapter = new VTigerCrm.DefaultApi(); // Allocate the API class we're going to use.\r\nconst CryptoJS = require('crypto-js');\r\n\r\nvar challengeToken = '';\r\nvar sessionHandle = '';\r\n\r\nvar contactId = '';\r\n\r\nvTigerAdapter.apiClient.basePath = 'http://localhost/vtigercrm/webservice.php';\r\n\r\nfunction createContact(mobilePhoneNo) {\r\n    const contact = {\r\n        assigned_user_id: REISEBUDDY_USER_ID,\r\n        mobile: mobilePhoneNo,\r\n        lastname: mobilePhoneNo,\r\n        email: mobilePhoneNo + \"@sms.db.de\"\r\n    };\r\n    vTigerAdapter.operationcreatePost(sessionHandle, ELEMENT_TYPE_CONTACT, JSON.stringify(contact), function (err, data, response) {\r\n        if (err) {\r\n            console.error('CREATE', err);\r\n            return false;   //------------------>\r\n        }\r\n        if (!response.body.success) {\r\n            console.error('Couldn\\'t create contact:', response.body.error.message);\r\n            return false;  //------------------>\r\n        }\r\n\r\n        contactId = response.body.result.id;\r\n        console.log('CREATED_CONTACT_ID', contactId);\r\n    })\r\n}\r\n\r\nvTigerAdapter.operationgetchallengeGet(USERNAME, function onGetChallenge(err, data, response) {\r\n    if (err) {\r\n        console.error('GET_CHALLENGE', err);\r\n        return false;   //------------------>\r\n    }\r\n    if (!response.body.success) {\r\n        console.error('Couldn\\'t receive challenge:', response.body.error.message);\r\n        return false;  //------------------>\r\n    }\r\n\r\n    challengeToken = response.body.result.token;\r\n    console.log('CHALLENGE_TOKEN', challengeToken);\r\n\r\n    vTigerAdapter.operationloginPost(USERNAME, CryptoJS.MD5(challengeToken + USER_ACCESS_KEY).toString(), function onLogin(err, data, response) {\r\n        if (err) {\r\n            console.log('LOGIN', err);\r\n            return false; //------------------>\r\n        }\r\n\r\n        if (!response.body.success) {\r\n            console.error('Couldn\\'t log in:', response.body.error.message);\r\n            return false;  //------------------>\r\n        }\r\n\r\n        sessionHandle = response.body.result.sessionName;\r\n        console.log('SESSION_HANDLE', sessionHandle);\r\n\r\n        const queryString = \"select * from Contacts where email = '007@sms.db.de';\";\r\n        vTigerAdapter.operationqueryGet(sessionHandle, queryString, function onQuery(err, data, response) {\r\n            if (err) {\r\n                console.log('QUERY', err);\r\n                return false; //------------------>\r\n            }\r\n\r\n            if (!response.body.success) {\r\n                console.error('Couldn\\'t execute query:', response.body.error.message);\r\n                return false;  //------------------>\r\n            }\r\n\r\n            if (response.body.result[0]){\r\n                // we found a contact matching the query\r\n                contactId = response.body.result[0].id;\r\n                console.log('QUERIED_CONTACT_ID', contactId);\r\n            } else {\r\n                // create a new one\r\n                createContact('007');\r\n            }\r\n        });\r\n    });\r\n});\r\n"]}