{"version":3,"sources":["../../../src/vtiger_consumer_swagger/src/index.js"],"names":[],"mappings":";;;;AAAC,WAAS,OAAT,EAAkB;AACjB,MAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAA3C,EAAgD;;AAE9C,WAAO,CAAC,WAAD,EAAc,oBAAd,EAAoC,eAApC,EAAqD,0BAArD,EAAiF,mBAAjF,EAAsG,gBAAtG,CAAP,EAAgI,OAAhI;AACD,GAHD,MAGO,IAAI,QAAO,MAAP,yCAAO,MAAP,OAAkB,QAAlB,IAA8B,OAAO,OAAzC,EAAkD;;AAEvD,WAAO,OAAP,GAAiB,QAAQ,QAAQ,aAAR,CAAR,EAAgC,QAAQ,sBAAR,CAAhC,EAAiE,QAAQ,iBAAR,CAAjE,EAA6F,QAAQ,4BAAR,CAA7F,EAAoI,QAAQ,qBAAR,CAApI,EAAoK,QAAQ,kBAAR,CAApK,CAAjB;AACD;AACF,CARA,EAQC,UAAS,SAAT,EAAoB,YAApB,EAAkC,OAAlC,EAA2C,kBAA3C,EAA+D,WAA/D,EAA4E,UAA5E,EAAwF;AACxF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,MAAI,UAAU;;;;;AAKZ,eAAW,SALC;;;;;AAUZ,kBAAc,YAVF;;;;;AAeZ,aAAS,OAfG;;;;;AAoBZ,wBAAoB,kBApBR;;;;;AAyBZ,iBAAa,WAzBD;;;;;AA8BZ,gBAAY;AA9BA,GAAd;;AAiCA,SAAO,OAAP;AACD,CA5EA,CAAD","file":"index.js","sourcesContent":["(function(factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/CRUDResponse', 'model/Element', 'model/GetChallengeResult', 'model/LoginResult', 'api/DefaultApi'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('./ApiClient'), require('./model/CRUDResponse'), require('./model/Element'), require('./model/GetChallengeResult'), require('./model/LoginResult'), require('./api/DefaultApi'));\n  }\n}(function(ApiClient, CRUDResponse, Element, GetChallengeResult, LoginResult, DefaultApi) {\n  'use strict';\n\n  /**\n   * Interaction with customer master-data .<br>\n   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.\n   * <p>\n   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:\n   * <pre>\n   * var VTigerCrm = require('index'); // See note below*.\n   * var xxxSvc = new VTigerCrm.XxxApi(); // Allocate the API class we're going to use.\n   * var yyyModel = new VTigerCrm.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})\n   * and put the application logic within the callback function.</em>\n   * </p>\n   * <p>\n   * A non-AMD browser application (discouraged) might do something like this:\n   * <pre>\n   * var xxxSvc = new VTigerCrm.XxxApi(); // Allocate the API class we're going to use.\n   * var yyy = new VTigerCrm.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * </p>\n   * @module index\n   * @version 0.0.1\n   */\n  var exports = {\n    /**\n     * The ApiClient constructor.\n     * @property {module:ApiClient}\n     */\n    ApiClient: ApiClient,\n    /**\n     * The CRUDResponse model constructor.\n     * @property {module:model/CRUDResponse}\n     */\n    CRUDResponse: CRUDResponse,\n    /**\n     * The Element model constructor.\n     * @property {module:model/Element}\n     */\n    Element: Element,\n    /**\n     * The GetChallengeResult model constructor.\n     * @property {module:model/GetChallengeResult}\n     */\n    GetChallengeResult: GetChallengeResult,\n    /**\n     * The LoginResult model constructor.\n     * @property {module:model/LoginResult}\n     */\n    LoginResult: LoginResult,\n    /**\n     * The DefaultApi service constructor.\n     * @property {module:api/DefaultApi}\n     */\n    DefaultApi: DefaultApi\n  };\n\n  return exports;\n}));\n"]}