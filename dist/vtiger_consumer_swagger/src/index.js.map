{"version":3,"sources":["../../../src/vtiger_consumer_swagger/src/index.js"],"names":[],"mappings":";;;;AAAC,WAAS,OAAT,EAAkB;AACjB,MAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAA3C,EAAgD;;AAE9C,WAAO,CAAC,WAAD,EAAc,oBAAd,EAAoC,eAApC,EAAqD,0BAArD,EAAiF,+BAAjF,EAAkH,gCAAlH,EAAoJ,mBAApJ,EAAyK,yBAAzK,EAAoM,qBAApM,EAA2N,gBAA3N,CAAP,EAAqP,OAArP;AACD,GAHD,MAGO,IAAI,QAAO,MAAP,yCAAO,MAAP,OAAkB,QAAlB,IAA8B,OAAO,OAAzC,EAAkD;;AAEvD,WAAO,OAAP,GAAiB,QAAQ,QAAQ,aAAR,CAAR,EAAgC,QAAQ,sBAAR,CAAhC,EAAiE,QAAQ,iBAAR,CAAjE,EAA6F,QAAQ,4BAAR,CAA7F,EAAoI,QAAQ,iCAAR,CAApI,EAAgL,QAAQ,kCAAR,CAAhL,EAA6N,QAAQ,qBAAR,CAA7N,EAA6P,QAAQ,2BAAR,CAA7P,EAAmS,QAAQ,uBAAR,CAAnS,EAAqU,QAAQ,kBAAR,CAArU,CAAjB;AACD;AACF,CARA,EAQC,UAAS,SAAT,EAAoB,YAApB,EAAkC,OAAlC,EAA2C,kBAA3C,EAA+D,uBAA/D,EAAwF,wBAAxF,EAAkH,WAAlH,EAA+H,iBAA/H,EAAkJ,aAAlJ,EAAiK,UAAjK,EAA6K;AAC7K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,MAAI,UAAU;;;;;AAKZ,eAAW,SALC;;;;;AAUZ,kBAAc,YAVF;;;;;AAeZ,aAAS,OAfG;;;;;AAoBZ,wBAAoB,kBApBR;;;;;AAyBZ,6BAAyB,uBAzBb;;;;;AA8BZ,8BAA0B,wBA9Bd;;;;;AAmCZ,iBAAa,WAnCD;;;;;AAwCZ,uBAAmB,iBAxCP;;;;;AA6CZ,mBAAe,aA7CH;;;;;AAkDZ,gBAAY;AAlDA,GAAd;;AAqDA,SAAO,OAAP;AACD,CAhGA,CAAD","file":"index.js","sourcesContent":["(function(factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/CRUDResponse', 'model/Element', 'model/GetChallengeResult', 'model/GetChallengeResultError', 'model/GetChallengeResultResult', 'model/LoginResult', 'model/LoginResultResult', 'model/QueryResponse', 'api/DefaultApi'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('./ApiClient'), require('./model/CRUDResponse'), require('./model/Element'), require('./model/GetChallengeResult'), require('./model/GetChallengeResultError'), require('./model/GetChallengeResultResult'), require('./model/LoginResult'), require('./model/LoginResultResult'), require('./model/QueryResponse'), require('./api/DefaultApi'));\n  }\n}(function(ApiClient, CRUDResponse, Element, GetChallengeResult, GetChallengeResultError, GetChallengeResultResult, LoginResult, LoginResultResult, QueryResponse, DefaultApi) {\n  'use strict';\n\n  /**\n   * Interaction with customer master-data .<br>\n   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.\n   * <p>\n   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:\n   * <pre>\n   * var VTigerCrm = require('index'); // See note below*.\n   * var xxxSvc = new VTigerCrm.XxxApi(); // Allocate the API class we're going to use.\n   * var yyyModel = new VTigerCrm.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})\n   * and put the application logic within the callback function.</em>\n   * </p>\n   * <p>\n   * A non-AMD browser application (discouraged) might do something like this:\n   * <pre>\n   * var xxxSvc = new VTigerCrm.XxxApi(); // Allocate the API class we're going to use.\n   * var yyy = new VTigerCrm.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * </p>\n   * @module index\n   * @version 0.0.2\n   */\n  var exports = {\n    /**\n     * The ApiClient constructor.\n     * @property {module:ApiClient}\n     */\n    ApiClient: ApiClient,\n    /**\n     * The CRUDResponse model constructor.\n     * @property {module:model/CRUDResponse}\n     */\n    CRUDResponse: CRUDResponse,\n    /**\n     * The Element model constructor.\n     * @property {module:model/Element}\n     */\n    Element: Element,\n    /**\n     * The GetChallengeResult model constructor.\n     * @property {module:model/GetChallengeResult}\n     */\n    GetChallengeResult: GetChallengeResult,\n    /**\n     * The GetChallengeResultError model constructor.\n     * @property {module:model/GetChallengeResultError}\n     */\n    GetChallengeResultError: GetChallengeResultError,\n    /**\n     * The GetChallengeResultResult model constructor.\n     * @property {module:model/GetChallengeResultResult}\n     */\n    GetChallengeResultResult: GetChallengeResultResult,\n    /**\n     * The LoginResult model constructor.\n     * @property {module:model/LoginResult}\n     */\n    LoginResult: LoginResult,\n    /**\n     * The LoginResultResult model constructor.\n     * @property {module:model/LoginResultResult}\n     */\n    LoginResultResult: LoginResultResult,\n    /**\n     * The QueryResponse model constructor.\n     * @property {module:model/QueryResponse}\n     */\n    QueryResponse: QueryResponse,\n    /**\n     * The DefaultApi service constructor.\n     * @property {module:api/DefaultApi}\n     */\n    DefaultApi: DefaultApi\n  };\n\n  return exports;\n}));\n"]}